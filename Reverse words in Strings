// Approach 1...

class Solution {
    public String reverseWords(String s) {
        String words[] = s.trim().split("\\s+");

        StringBuilder revString = new StringBuilder();

        for (int i = words.length - 1; i >= 0; i--) {
            revString.append(words[i]);
            if (i != 0) {
                revString.append(" ");
            }
        }
        return revString.toString();
    }
}

// Approach 2...

class Solution {
    public String reverseWords(String s) {
        int n = s.length();
        StringBuilder revString = new StringBuilder();

        // Step 1: reverse the whole string
        for (int i = n - 1; i >= 0; i--) {
            revString.append(s.charAt(i));
        }

        // Step 2: reverse each word
        int left = 0, right = 0;
        while (right < revString.length()) {
            // move right until we hit a space or end
            while (right < revString.length() && revString.charAt(right) != ' ') {
                right++;
            }

            // reverse this word
            reverse(revString, left, right - 1);

            // move to next word (skip space)
            right++;
            left = right;
        }

        return revString.toString();
    }
    private void reverse(StringBuilder sb, int l, int r) {
        while (l < r) {
            char temp = sb.charAt(l);
            sb.setCharAt(l, sb.charAt(r));
            sb.setCharAt(r, temp);
            l++;
            r--;
        }
    }
}

